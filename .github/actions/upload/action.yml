name: Upload Release
description: Uploads a built release file

inputs:
  artifact_name:
    description: Artifact name
    required: true
  aws_key_id:
    description: AWS access key ID
    required: true
  aws_secret_access_key:
    description: AWS secret access key
    required: true
  aws_end_point:
    description: AWS end point
    required: true
  source:
    description: Source location
    required: false
    default: package

runs:
  using: "composite"
  steps:
    - name: Save artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: ${{ runner.temp }}/shadow_build_dir/${{ inputs.source }}/${{ inputs.artifact_name }}

    # - name: Upload build to S3 Bucket
    #   if: github.event_name == 'push'
    #   working-directory: ${{ runner.temp }}/shadow_build_dir/${{ inputs.source }}
    #   run: |
    #     aws configure set aws_access_key_id ${{ inputs.aws_key_id }}
    #     aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}
    #     aws s3 cp ${{ inputs.artifact_name }} s3://qgroundcontrol/builds/${{ github.ref_name }}/${{ inputs.artifact_name }} --region us-west-2 --acl public-read
    #   shell: bash

    # - name: Upload tagged stable build to S3 latest Bucket
    #   if: github.event_name == 'push' && github.ref_type == 'tag'
    #   working-directory: ${{ runner.temp }}/shadow_build_dir/${{ inputs.source }}
    #   run: |
    #     aws configure set aws_access_key_id ${{ inputs.aws_key_id }}
    #     aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}
    #     aws s3 cp ${{ inputs.artifact_name }} s3://qgroundcontrol/latest/${{ inputs.artifact_name }} --region us-west-2 --acl public-read
    #   shell: bash

    - name: Configure AWS Credentials
      if: ${{ github.event_name == 'push' && !github.event.pull_request.head.repo.fork && inputs.aws_key_id != '' && inputs.aws_secret_access_key != '' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ap-northeast-2

    - name: Upload to MinIO
      if: ${{ github.event_name == 'push' && !github.event.pull_request.head.repo.fork && inputs.aws_key_id != '' && inputs.aws_secret_access_key != '' }}
      working-directory: ${{ runner.temp }}/shadow_build_dir/${{ inputs.source }}
      # run: |
      #   aws configure set aws_access_key_id ${{ inputs.aws_key_id }}
      #   aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}
      #   aws configure set default.region ap-northeast-2
      #   aws configure set default.s3.signature_version s3v4
      run : aws s3 cp ${{ inputs.artifact_name }} s3://data/builds/${{ inputs.artifact_name }} --endpoint-url ${{ inputs.aws_end_point }}
      shell: bash

    - name: Upload to MinIO latest bucket
      if: ${{ github.event_name == 'push' && github.ref_type == 'tag' && !github.event.pull_request.head.repo.fork && inputs.aws_key_id != '' && inputs.aws_secret_access_key != '' }}
      working-directory: ${{ runner.temp }}/shadow_build_dir/${{ inputs.source }}
      # run: |
      #   aws configure set aws_access_key_id ${{ inputs.aws_key_id }}
      #   aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }}
      #   aws configure set default.region ap-northeast-2
      #   aws configure set default.s3.signature_version s3v4
      run : aws s3 cp ${{ inputs.artifact_name }} s3://data/latest/${{ inputs.artifact_name }} --endpoint-url ${{ inputs.aws_end_point }}
      shell: bash
